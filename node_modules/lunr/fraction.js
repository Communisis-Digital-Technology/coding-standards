var Fraction = function (num) {
  this.num = num

  var d = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0],
      z = num,
      n = 1,
      t = 1,
      epsilon = 0.0001,
      max_iterations = 20

  while (num && t < max_iterations && Math.abs(n/d[t] - num) > epsilon) {
    t += 1
    z = 1 / (z - parseInt(z, 10))
    d[t] = d[t-1] * parseInt(z, 10) + d[t - 2]
    n = parseInt(num * d[t] + 0.5)
  }

  this.numerator = n
  this.denominator = d[t]
}

Fraction.prototype.toString = function () {
  return this.numerator + "/" + this.denominator
}

Fraction.prototype.valueOf = function () {
  return this.num
}
